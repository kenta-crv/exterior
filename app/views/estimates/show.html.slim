- set_meta_tags noindex: true
.center
.tops-wrapper
br
 h2.headline  
   |基本情報　
   = link_to "一覧に戻る", estimates_path, class: "btn btn-default"
   = link_to "編集する", edit_estimate_path(@estimate), class: "btn btn-primary"
   = link_to "削除する", estimate_path(@estimate), class: "btn btn-secondary", method: :delete, data: { confirm: '本当に削除しますか？' }, class: "btn btn-danger"
table.company
  colgroup
    col width="10%"
    col width="20%"
    col width="70%"

  tr
    td
      strong.label.label-blue.point
        | Point
        span.word 個人でフルネーム登録されている場合、開示前に苗字のみの表示に変更されます。法人やマンション名の場合はそちらに切り替えます。
    td.arrow_box
      | お名前
    td
      = @estimate.name

  tr
    td
    td.arrow_box
      | 生年月日
    td
      = @estimate.birth

  tr
    td
    td.arrow_box
      | 携帯番号
    td
      = @estimate.tel

  tr
    td
    td.arrow_box
      | 郵便番号
    td
      = @estimate.postnumber

  tr
    td
    td.arrow_box
      | 都道府県
    td
      = @estimate.prefecture

  tr
    td
    td.arrow_box
      | 市町村
    td
      = @estimate.city

  tr
    td
    td.arrow_box
      | 番地
    td
      = @estimate.city2

  tr
    td
    td.arrow_box
      | ビル名
    td
      = @estimate.building

  tr
    td
    td.arrow_box
      | メールアドレス
    td
      = @estimate.email

  tr
    td
    td.arrow_box
      | 使いたい機能
    td
      = @estimate.which_one

  tr
    td
    td.arrow_box
      | 導入時期
    td
      = @estimate.period

  tr
    td
    td.arrow_box
      | その他
    td
      = @estimate.remarks

  tr
    td
    td.arrow_box
      | 屋外平米数
    td
      = @estimate.square_meter
      | m2

  tr
    td
    td.arrow_box
      | 他社で見積り・図面を取得済み？
    td
      = @estimate.bring

  tr
    td
    td.arrow_box
      | 施工決定の重要点
    td
      = @estimate.importance

  tr
    td
    td.arrow_box
      | 希望施工予定月
    td
      = @estimate.schedule


/h2.headline  
  | 調査進捗　

/table.company[width="100%"]
  thead
    tr
      th ロゴ
      th ステータス
      th メール送信
      th 資料
      th 備考
      th 操作

  /tbody
    - @estimate.client_comments.each do |client_comment|
      - client = client_comment.client
      tr
        td
          = image_tag "neos-rogo.webp", width: "100px"
        td
          = client_comment.status
        td
          label メールを送る
          input[type="checkbox" disabled]
        td
          - if client_comment.file.attached?
            = link_to '提案資料', url_for(client_comment.file), class: "btn btn-primary"
        td
          = client_comment.remarks
        td
          = link_to "編集", edit_estimate_client_comment_path(@estimate, client_comment, client_id: client.id), class: "btn btn-primary"


/- @estimate.progresses.each do |progress|
      table.company[width="100%"]
       col[width="10%"]
       col[width="10%"]
       col[width="15%"]
       col[width="15%"]
       col[width="42%"]
       col[width="8%"]
       tr.center
        td
          = progress.status
        td
          = progress.document
        td
          = progress.created_at.strftime("%Y年%m月%d日")
        td
          = progress&.next&.strftime("%Y年%m月%d日 %-H時%-M分")
        td
          = progress.body
        td
          = link_to "削除", estimate_progress_path(@estimate, progress), method: :delete, data: {confirm:"本当に削除しますか？"}, class:"btn btn-danger"
      .center  
       = image_tag "down.webp",width:"50px"
        


javascript:
  document.addEventListener("DOMContentLoaded", function(event) {
    const companies = ['cocacola', 'neos', 'itoen', 'asahi', 'dydo', 'yamakyu', 'body'];
    companies.forEach(function(company) {
      setStatusMailCheckbox(`comment_${company}`, `${company}_mail`);
    });
  });

  // メール送信のチェックボックス制御
  function setStatusMailCheckbox(selectId, checkboxId) {
    const selectElement = document.getElementById(selectId);
    const checkboxElement = document.getElementById(checkboxId);

    function updateCheckbox() {
      if (selectElement.value === '見送りNG' || selectElement.value === '契約' || selectElement.value === '見積提示中') {
        checkboxElement.disabled = false;
        checkboxElement.checked = true;
      } else {
        checkboxElement.disabled = true;
        checkboxElement.checked = false;
      }
    }

    selectElement.addEventListener('change', updateCheckbox);
  }